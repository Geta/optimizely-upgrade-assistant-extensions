//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Epi.Source.Updater {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Epi.Source.Updater.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For Class Attribute: TemplateDescriptor, Argument Default will be removed..
        /// </summary>
        internal static string EpiAttributeRemoverDescription {
            get {
                return ResourceManager.GetString("EpiAttributeRemoverDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute Argument &apos;{0}&apos; will be removed.
        /// </summary>
        internal static string EpiAttributeRemoverMessageFormat {
            get {
                return ResourceManager.GetString("EpiAttributeRemoverMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CMS Attribute TemplateDescriptor will be updated.
        /// </summary>
        internal static string EpiAttributeRemoverTitle {
            get {
                return ResourceManager.GetString("EpiAttributeRemoverTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This class is no longer supported on CMS and will be replaced.
        /// </summary>
        internal static string EpiClassUpgradeDescription {
            get {
                return ResourceManager.GetString("EpiClassUpgradeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class &apos;{0}&apos; will be replaced with &apos;{1}&apos;.
        /// </summary>
        internal static string EpiClassUpgradeMessageFormat {
            get {
                return ResourceManager.GetString("EpiClassUpgradeMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CMS Classes like PartialContentController or BlockController will be replaced.
        /// </summary>
        internal static string EpiClassUpgradeTitle {
            get {
                return ResourceManager.GetString("EpiClassUpgradeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In CMS 12 override of PropertyData ParseToObject is no longer required. Functionality can be achieved by creating a new instance and calling the ParsToSelf method..
        /// </summary>
        internal static string EpiDisallowedTypesDescription {
            get {
                return ResourceManager.GetString("EpiDisallowedTypesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; Method override will be removed.
        /// </summary>
        internal static string EpiDisallowedTypesMessageFormat {
            get {
                return ResourceManager.GetString("EpiDisallowedTypesMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CMS 12 projects should no longer use overrides for ParseToObject.
        /// </summary>
        internal static string EpiDisallowedTypesTitle {
            get {
                return ResourceManager.GetString("EpiDisallowedTypesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CMS Display Channels will be updated..
        /// </summary>
        internal static string EpiDisplayChannelDescription {
            get {
                return ResourceManager.GetString("EpiDisplayChannelDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;HttpContextBase&apos; will be replaced with &apos;HttpContext&apos;.
        /// </summary>
        internal static string EpiDisplayChannelFormat {
            get {
                return ResourceManager.GetString("EpiDisplayChannelFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CMS display channels will be updated.
        /// </summary>
        internal static string EpiDisplayChannelTitle {
            get {
                return ResourceManager.GetString("EpiDisplayChannelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Interface IFindUIConfiguration is no longer supported and will be replaced.
        /// </summary>
        internal static string EpiMemberReplacementDescription {
            get {
                return ResourceManager.GetString("EpiMemberReplacementDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface &apos;{0}&apos; will be replaced with &apos;{1}&apos;.
        /// </summary>
        internal static string EpiMemberReplacementMessageFormat {
            get {
                return ResourceManager.GetString("EpiMemberReplacementMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IFindUIConfiguration will be replaced with FindOptions.
        /// </summary>
        internal static string EpiMemberReplacementTitle {
            get {
                return ResourceManager.GetString("EpiMemberReplacementTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obsolete using statements should be removed..
        /// </summary>
        internal static string EpiObsoleteUsingDescription {
            get {
                return ResourceManager.GetString("EpiObsoleteUsingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using statement {0} should be removed.
        /// </summary>
        internal static string EpiObsoleteUsingMessageFormat {
            get {
                return ResourceManager.GetString("EpiObsoleteUsingMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commerce: Remove obsolete usings like Mediachase.BusinessFoundation.
        /// </summary>
        internal static string EpiObsoleteUsingTitle {
            get {
                return ResourceManager.GetString("EpiObsoleteUsingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CMS partial controllers will be updated..
        /// </summary>
        internal static string EpiPartialControllerDescription {
            get {
                return ResourceManager.GetString("EpiPartialControllerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;Index&apos; will be replaced with &apos;InvokeComponent&apos;.
        /// </summary>
        internal static string EpiPartialControllerFormat {
            get {
                return ResourceManager.GetString("EpiPartialControllerFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CMS partial controllers will be updated.
        /// </summary>
        internal static string EpiPartialControllerTitle {
            get {
                return ResourceManager.GetString("EpiPartialControllerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variables that are not set after they are created should be marked as constant.
        /// </summary>
        internal static string MakeConstDescription {
            get {
                return ResourceManager.GetString("MakeConstDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &apos;{0}&apos; should be marked const.
        /// </summary>
        internal static string MakeConstMessageFormat {
            get {
                return ResourceManager.GetString("MakeConstMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace obsolete Types and Attributes eg. TemplateDescriptor(Default).
        /// </summary>
        internal static string MakeConstTitle {
            get {
                return ResourceManager.GetString("MakeConstTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This type is no longer supported on CMS and should be replaced..
        /// </summary>
        internal static string TypeUpgradeDescription {
            get {
                return ResourceManager.GetString("TypeUpgradeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; should be replaced with &apos;{1}&apos;.
        /// </summary>
        internal static string TypeUpgradeMessageFormat {
            get {
                return ResourceManager.GetString("TypeUpgradeMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CMS Types and Namespaces should be upgraded.
        /// </summary>
        internal static string TypeUpgradeTitle {
            get {
                return ResourceManager.GetString("TypeUpgradeTitle", resourceCulture);
            }
        }
    }
}
